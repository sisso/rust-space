// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace space_data
{

using global::System;
using global::FlatBuffers;

public struct SectorNew : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public SectorNew __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Id { get { return __p.bb.GetUint(__p.bb_pos + 0); } }
  public space_data.V2 Coords { get { return (new space_data.V2()).__assign(__p.bb_pos + 4, __p.bb); } }

  public static Offset<space_data.SectorNew> CreateSectorNew(FlatBufferBuilder builder, uint Id, float coords_X, float coords_Y) {
    builder.Prep(4, 12);
    builder.Prep(4, 8);
    builder.PutFloat(coords_Y);
    builder.PutFloat(coords_X);
    builder.PutUint(Id);
    return new Offset<space_data.SectorNew>(builder.Offset);
  }
};


}
